# coding: utf-8

"""
    Gitea API.

    This documentation describes the Gitea API.  # noqa: E501

    The version of the OpenAPI document: 1.18.0+1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import rcmt.source.gitea.client
from rcmt.source.gitea.client.models.tracked_time import TrackedTime  # noqa: E501
from rcmt.source.gitea.client.rest import ApiException

class TestTrackedTime(unittest.TestCase):
    """TrackedTime unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test TrackedTime
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = rcmt.source.gitea.client.models.tracked_time.TrackedTime()  # noqa: E501
        if include_optional :
            return TrackedTime(
                created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                id = 56, 
                issue = rcmt.source.gitea.client.models.issue.Issue(
                    assignee = rcmt.source.gitea.client.models.user.User(
                        active = True, 
                        avatar_url = '', 
                        created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        description = '', 
                        email = '', 
                        followers_count = 56, 
                        following_count = 56, 
                        full_name = '', 
                        id = 56, 
                        is_admin = True, 
                        language = '', 
                        last_login = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        location = '', 
                        login = '', 
                        login_name = 'empty', 
                        prohibit_login = True, 
                        restricted = True, 
                        starred_repos_count = 56, 
                        visibility = '', 
                        website = '', ), 
                    assignees = [
                        rcmt.source.gitea.client.models.user.User(
                            active = True, 
                            avatar_url = '', 
                            created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            description = '', 
                            email = '', 
                            followers_count = 56, 
                            following_count = 56, 
                            full_name = '', 
                            id = 56, 
                            is_admin = True, 
                            language = '', 
                            last_login = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            location = '', 
                            login = '', 
                            login_name = 'empty', 
                            prohibit_login = True, 
                            restricted = True, 
                            starred_repos_count = 56, 
                            visibility = '', 
                            website = '', )
                        ], 
                    body = '', 
                    closed_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    comments = 56, 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    due_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    html_url = '', 
                    id = 56, 
                    is_locked = True, 
                    labels = [
                        rcmt.source.gitea.client.models.label.Label(
                            color = '00aabb', 
                            description = '', 
                            id = 56, 
                            name = '', 
                            url = '', )
                        ], 
                    milestone = rcmt.source.gitea.client.models.milestone.Milestone(
                        closed_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        closed_issues = 56, 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        description = '', 
                        due_on = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        id = 56, 
                        open_issues = 56, 
                        state = '', 
                        title = '', 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                    number = 56, 
                    original_author = '', 
                    original_author_id = 56, 
                    pull_request = rcmt.source.gitea.client.models.pull_request_meta.PullRequestMeta(
                        merged = True, 
                        merged_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                    ref = '', 
                    repository = rcmt.source.gitea.client.models.repository_meta.RepositoryMeta(
                        full_name = '', 
                        id = 56, 
                        name = '', 
                        owner = '', ), 
                    state = '', 
                    title = '', 
                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    url = '', 
                    user = , ), 
                issue_id = 56, 
                time = 56, 
                user_id = 56, 
                user_name = ''
            )
        else :
            return TrackedTime(
        )

    def testTrackedTime(self):
        """Test TrackedTime"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
